name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  CC: gcc-10
  CXX: g++-10

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Install Conan
      # Install the content of dependency
      run: sudo apt update && sudo apt install -y python3 python3-pip lcov curl && pip install conan

    - name: Configure Conan
      run: conan profile new default --detect && conan profile update settings.compiler.libcxx=libstdc++11 default && conan profile update settings.build_type=$BUILD_TYPE default

    - name: Install Dependency
      working-directory: ${{github.workspace}}/build
      
      run: conan install .. --build=missing -pr:b=default -pr:h=default

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_TOOLCHAIN_FILE=generators/conan_toolchain.cmake


    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

    - name: Lcov
      working-directory:  ${{github.workspace}}/build
      shell: bash
      run: lcov --capture --directory $GITHUB_WORKSPACE -o coverage.info --no-external

    - name: Upload to Codecov.io
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: curl -Os https://uploader.codecov.io/latest/linux/codecov && chmod +x codecov && ./codecov